# -*- coding: utf-8 -*-
import json, os, time
import requests
from typing import Optional, Tuple, List, Optional as _Optional
from app_config import OPENAI_API_KEY, OPENAI_BASE_URL, OPENAI_MODEL, OPENAI_TIMEOUT_S
import logging
logger = logging.getLogger("bot.llm")

HEADERS = {"Authorization": f"Bearer {OPENAI_API_KEY}", "Content-Type": "application/json"}

SYSTEM_PROMPT = (
    "Ты строгий классификатор рабочих сообщений. Твоя задача — определить, является ли сообщение задачей, "
    "и если да — составить понятное описание (с контекстом), извлечь дедлайн/важность и выбрать исполнителя. "
    "Если не уверен — ЛУЧШЕ поставить looks_like_task=false. Ответ ВСЕГДА строго JSON по схеме. "
    "Если дан hint на ссылку исходного сообщения — верни её в поле source_link (если это задача), иначе null."
)

USER_PROMPT_TMPL = """Контекст:
- Список потенциальных исполнителей (имена уникальны): {names}
- Автор сообщения: {author}
- Дата сообщения (локальная): {msg_date}
- Ссылка на оригинальное сообщение (hint): {msg_link}
- Сообщение для оценки:
\"\"\"{text}\"\"\"

Маршрутизация темы → исполнитель (если это задача):

- «Оксана Вострова», telegram_id="787616580"
  Берёт: Аккаунт-менеджер УК — обращения жильцов/арендаторов, коммуникацию с гостями, сервис-заявки без сложного ремонта, бытовые вопросы в апартаментах, организация внеплановой уборки, ключи/заселение/выселение, правила проживания/Wi-Fi.
  Примеры: «сломался кондиционер в U-12», «у нас потёк кран в ванной», «гости жалуются на шум», «нужна внеплановая уборка завтра в 10:00», «пришлите правила проживания и Wi-Fi».

- «Александр Колодий», telegram_id="1906230072"
  Берёт: склад, приём/выдача, инвентаризация, хранение, контроль остатков.
  Примеры: «выдать со склада», «принять доставку», «провести инвентаризацию».

- «Александр Миронов», telegram_id="724448768"
  Берёт: транспорт, водители, трансферы, логистика перемещений.
  Примеры: «заказать машину», «нужен трансфер из аэропорта», «перевезти мебель на склад».

- «Василий Лысый», telegram_id="525287503"
  Берёт: IT-инфраструктура, сети, доступы, CRM/ПО, рабочие места.
  Примеры: «настроить VPN/доступ», «починить Wi-Fi», «создать почту/аккаунт», «починить принтер».

- «Максим Куклин», telegram_id="1827484827"
  Берёт: Front Office/ресепшн, брони, заселение/выселение гостей, графики смен.
  Примеры: «с 3–5 сентября всех заселить», «подтвердить бронирование», «составить график ресепшн».

- «Марина Рыбалко», telegram_id="783636493"
  Берёт: финансы (уведомления о платежах, отчёты по выручке/ADR/RevPAR, сверки).
  Примеры: «дать финансовый отчёт», «сверить поступления», «обновить отчёт по доходам».

- «Юрий Чорней», telegram_id="986994687"
  Берёт: техподдержка объектов, дефекты/ремонт, чек-листы, инженерные задачи.
  Примеры: «устранить течь/неисправность», «проверить кондиционеры», «сделать обход, акт дефектов».

- «Татьяна Ивкина», telegram_id="987654321"
  Берёт: бухгалтерия, акты, счета, закрывающие, сверка контрагентов.
  Примеры: «подготовить акт приёма-передачи», «выписать счёт», «сверка по поставщику».

- «Виктория Стеценко», telegram_id="779263421"
  Берёт: доходы и маркетинг: прайсинг, промо, отчёты по выручке/загрузке, OTA.
  Примеры: «обновить тарифы/акцию», «дать отчёт по загрузке», «включить промо на OTA».

- «Александра Колодий», telegram_id="157422442"
  Берёт: комплектующие УК, закупка/доставка расходников/мебели по задачам УК.
  Примеры: «закупить комплектующие», «довезти расходники на объект».

- «Виктория Горелик», telegram_id="566015359"
  Берёт: ресторан (зал), сервис, брони, инвентарь зала, отчёт по сменам.
  Примеры: «организовать банкет/резерв», «подготовить зал», «отчёт по смене».

- «Виталий Капшивый», telegram_id=""
  Берёт: кухня, меню, закупки продуктов, производственный контроль.
  Примеры: «согласовать меню», «закупить продукты», «внедрить техкарты».

- «Евгений Тиенкаев», telegram_id="1160816343"
  Берёт: GM Melasti — операционка по комплексу, статусы готовности, приёмы-передачи.
  Примеры: «дать завтра статус по всем виллам», «организовать приёмку юнитов».

- «Виктория Дмитриева», telegram_id="5071652373"
  Берёт: клининг/хаускипинг, графики уборок, стандарты, приёмка чистоты.
  Примеры: «организовать уборку/генеральную», «составить график клининга».

- «Виктор Ивановский», telegram_id="218098576"
  Берёт: зам. Василия — эскалации IT/операционки, контроль исполнения поручений.
  Примеры: «принять от строителей к 1 сентября», «проконтролировать устранение замечаний».

- «Наталья Серая», telegram_id="369937072"
  Берёт: зам. руководителя — организационные поручения, координация подразделений.
  Примеры: «собрать статус», «координировать отделы по задаче».

- «Александр Миронов», telegram_id=""
  Берёт: транспорт/логистика, водители, автопарк, трансферы.
  Примеры: «организовать трансфер», «расписание транспорта», «ТО автомобиля».

- «Алтынай Кожашева», telegram_id="5062802495"
  Берёт: финдир — бюджеты/лимиты, платежи, финансовые политики.
  Примеры: «подтвердить оплату», «утвердить бюджет».

- «Инна Остапенко», telegram_id="1030930325"
  Берёт: бухгалтерия (операционная), первичка/платёжки/закрывающие.
  Примеры: «сформировать платёжку», «подготовить акт/счёт».

- «Александр Колодий», telegram_id=""
  Берёт: склад/инвентарь, учёт, выдача, пополнение.
  Примеры: «инвентаризация», «выдать инвентарь», «дозаказ со склада».

- «Алексей Кумсков», telegram_id=""
  Берёт: комплектация (закуп-доставка-монтаж).
  Примеры: «комплектовать юнит», «доставить и смонтировать».

- «Николай Чербаджи», telegram_id="410834944"
  Берёт: комплектация (закуп-доставка-монтаж).
  Примеры: «закупить и доставить комплектующие».

- «Оксана Вострова», telegram_id=""
  Берёт: аккаунт-менеджер УК, коммуникации с клиентами УК.
  Примеры: «связаться с клиентом УК», «обновить карточку клиента».

- «Александр Свешников», telegram_id="87792668"
  Берёт: аккаунт-менеджер УК, сопровождение объектов.
  Примеры: «принять юнит в УК», «обновить информацию по юниту».

- «Александр Колмаков», telegram_id="941507695"
  Берёт: старший аккаунт Front Office — заселение/выселение, координация агентов.
  Примеры: «заселить с 13 по 25 сентября», «координировать агентов».

- «Алена Воронович», telegram_id="454391409"
  Берёт: директор по маркетингу — кампании, креатив, PR.
  Примеры: «запустить кампанию», «подготовить медиаплан».

- «Анна Михайлова», telegram_id="840396341"
  Берёт: директор студии дизайна — дизайн-задачи, бренд-материалы, макеты.
  Примеры: «подготовить дизайн-концепт/макет», «доработать бренд-гайд».

- «Донара», telegram_id="565589989"
  Берёт: дизайнер интерьеров — дизайн-проекты, визуализации, интерьерные решения.
  Примеры: «подготовить дизайн-проект спальни», «согласовать визуализацию кухни», «доработать интерьерные чертежи».

- Прочее → «Assistant», telegram_id «369937072»
Если несколько тем — выбери ОДНОГО наиболее ответственного из трёх. Если не подходит — assignee=null.

КРИТЕРИЙ «ЗАДАЧА» (должны выполняться ВСЕ три «АОИ»):
A) Action — есть явный императив/поручение (глаголы типа: сделать, заменить, заказать, подготовить, согласовать, установить, разместить, организовать, доставить, связаться, уточнить, прислать, отправить).
B) Object — указан конкретный объект действия (что именно, где/для кого). Если объект расплывчатый («решить вопрос», «заняться этим») — это НЕ задача.
C) Owner/Intent — понятно, кому поручено (явное обращение по @ или можно однозначно маршрутизовать по таблице ролей). Если нельзя разумно определить — НЕ задача.

НЕ задача (looks_like_task=false) — без вариантов:
- Сообщения-статусы, констатации фактов, отчёты без поручения («готовы к просмотрам...», «написал заявку...», «застраховано 9 вилл...»).
- Вопросы/обсуждения/уточнения («Это минимальная цена?», «когда сможем?», «что по мебели?»).
- Ответы/реакции («Ок», «Принято», «Спасибо»).
- Инициирование обсуждения/встречи без ответственного и повестки («давайте встречу...», «можем в 18?»).
- Императив без объекта («реши этот вопрос») — пока контекст не ясен.

ПРАВИЛА ВАЖНОСТИ (priority):
- high — явная срочность/жёсткий срок («срочно», «крайний срок», «к завтра», «нельзя переносить»); иначе normal.

ПРАВИЛА ДЕДЛАЙНА (deadline):
- только явные даты → YYYY-MM-DD; иначе null; не придумывай.

ПРАВИЛА ИСПОЛНИТЕЛЯ (assignee):
- если есть явное @упоминание конкретного исполнителя и императив к нему — этот пользователь кандидат;
- иначе выбери по теме (Restaurants/Finance/Laundry/прочее) из таблицы выше;
- если неоднозначно — assignee=null и candidates заполнить именами из {names}.
- В поле "assignee" ВСЕГДА используй ровно то написание имени из списка {names}. 
Никогда не переводить и не транслитерировать.

ОПИСАНИЕ (description):
- Если это задача, переформулируй сообщение в ЯВНОЕ действие 1–2 предложения с объектом этого действия, включи контекст (локация/проект/что обсуждалось).
- Если контекст вероятен, но не 100% — добавь «(возможно: …)» с описанием того что обсуждалось в чате этими пользователями в период постановки задачи (проект, проблема).
- НЕ выдумывай фактов; только вероятная подпись «возможно: …». Если даже предположить не из чего — оставь без скобки.
- В КОНЕЦ ВСЕГДА добавляй подпись источника:  «(задача пришла из чата, отправитель - @{author}, {msg_date})»  или без даты, если её нет; или «—» если автора нет. Примеры:
  «Согласовать счёт за газ в офисе. (задача пришла из чата, отправитель - @Tienkaiev, 2025-09-21)»
  «Обновить отчёт по доходам. (задача пришла из чата, отправитель - —)»
- НЕ добавляй никаких пояснений вне description.

ОСОБЫЕ ПРАВИЛА ДЛЯ УПОМИНАНИЙ (@username):
- Если сообщение содержит @username И есть императив (например: «@ivan сделай отчёт», «@elena подготовь акт»),
  то assignee=этот человек (если он есть в списке {names}).
- Если @username есть, но этого человека нет в {names} — assignee=null, но добавь его в candidates.
- Если несколько @username в сообщении с императивом — выбери наиболее вероятного по смыслу, остальных добавь в candidates.

УРОВЕНЬ УВЕРЕННОСТИ:
- Если уверенность < 0.6 — looks_like_task=false. (Не пытайся «угадать».)

Дедупликация:
- Если несколько сообщений формируют одну и ту же задачу (повторы или перефраз), создай ТОЛЬКО одну задачу — оставшиеся игнорируй.

СТРОГИЙ JSON:
{{
  "looks_like_task": true/false,
  "description": "Краткий текст задачи" | null,
  "assignee": "Имя" | null,
  "confidence": 0.0-1.0,
  "deadline": "YYYY-MM-DD" | null,
  "priority": "high" | "normal",
  "candidates": ["Имя1", "Имя2"] | [],
  "source_link": "{msg_link}" | null
}}"""



def _post_chat(messages: list) -> Optional[str]:
    if not OPENAI_API_KEY:
        logger.warning("LLM: no OPENAI_API_KEY set")
        return None
    try:
        resp = requests.post(
            f"{OPENAI_BASE_URL}/chat/completions",
            headers=HEADERS,
            timeout=OPENAI_TIMEOUT_S,
            json={
                "model": OPENAI_MODEL,
                "messages": messages,
                "temperature": 0.2,
                "response_format": {"type": "json_object"},
            },
        )
        logger.info("LLM POST %s -> %s", f"{OPENAI_BASE_URL}/chat/completions", resp.status_code)
        # покажем первые 400 символов
        logger.info("LLM raw preview: %s", (resp.text or "")[:400].replace("\n"," "))
        resp.raise_for_status()
        data = resp.json()
        return data["choices"][0]["message"]["content"]
    except Exception:
        return None

def llm_route(
    text: str,
    assignee_names: List[str],
    author_username: _Optional[str] = None,
    message_date: _Optional[str] = None,
    message_link: _Optional[str] = None,
) -> dict:
    try:
        prompt = USER_PROMPT_TMPL.format(
            names=", ".join(assignee_names),
            text=text,
            author=(author_username or "—"),
            msg_date=(message_date or "—"),
            msg_link=(message_link or "—"),
        )
        content = _post_chat([{"role":"system","content":SYSTEM_PROMPT},
                              {"role":"user","content":prompt}])
        if not content:
            logger.warning("LLM empty content for text=%r", text)
            return {}
        out = json.loads(content)
        logger.info(
            "LLM verdict: looks_like_task=%s conf=%.2f pr=%s dl=%s assignee=%s link=%s (author=%s, date=%s)",
            out.get("looks_like_task"), out.get("confidence", 0.0),
            out.get("priority"), out.get("deadline"), out.get("assignee"),
            out.get("source_link"),
            (author_username or "—"), (message_date or "—"),
        )
        return out
    except Exception:
        logger.exception("LLM parse failed for text=%r", text)
        return {}